@{
    ViewData["Title"] = "کاربران";
}

<script src="https://unpkg.com/ag-grid-community/dist/ag-grid-community.min.js"></script>

<div class="page-heading">
    <div class="page-title">
        <div class="row">
            <div class="col-12 col-md-6 order-md-1 order-last">
                <h3>کاربران</h3>
                <p class="text-subtitle text-muted">خوش آمدید</p>
            </div>
            <div class="col-12 col-md-6 order-md-2 order-first">
            </div>
        </div>
    </div>
    <section class="section">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">لیست کاربران</h4>
                <form>
                    <div class="mb-3 row">
                        <div class="col-sm-2">
                            <label class="form-label">نام</label>
                            <input name="firstName" type="text" class="form-control">
                        </div>
                        <div class="col-sm-2">
                            <label class="form-label">ایمیل</label>
                            <input name="email" type="text" class="form-control">
                        </div>
                        <div class="col-sm-2">
                            <label class="form-label">تلفن</label>
                            <input name="mobileNumber" type="text" class="form-control">
                        </div>
                        @*<div class="col-sm-1">
                        <label asp-for="TakeEntity" class="form-label">تعداد</label>
                        <select asp-for="TakeEntity" class="form-control">
                        <option value="2">2</option>
                        <option value="5">5</option>
                        <option value="10">10</option>
                        </select>
                        </div>*@
                        @*<div class="col-sm-1 position-relative">
                        <a asp-area="Admin" asp-controller="User" asp-action="Index" asp class="btn btn-success position-absolute bottom-0">رفرش</a>
                        </div>*@
                        <div class="col-sm-2 position-relative">
                            <button type="button" onclick="Submit()" class="btn btn-primary position-absolute bottom-0">جست و جو</button>
                        </div>
                    </div>
                </form>
                <div class="col-sm-2">
                    <label class="form-label">مرتب سازی اخرین رکورد</label>
                    <select name="sortOrder" class="form-control">
                        <option value="asc">صعودی</option>
                        <option value="desc">نزولی</option>
                    </select>
                </div>
            </div>
            <div class="card-body">
                <div id="myGrid" style="height: 200px;" class="ag-theme-balham-dark"></div>
            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination">
                    <li id="previous" class="page-item" onclick="onPreviousClick()">
                        <button class="page-link" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </button>
                    </li>

                    <li id="next" class="page-item">
                        <button class="page-link" aria-label="Next" onclick="onNextClick()">
                            <span aria-hidden="true">&raquo;</span>
                        </button>
                    </li>
                </ul>
            </nav>
        </div>
    </section>
</div>

@section Scripts {
    <script type="text/javascript">
        var activePage = 1;

        $(document).ready(function() {
            var data = { filters: $('form').serializeArray(), sortOrder: $('select[name="sortOrder"]').val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                url: 'https://@Context.Request.Host/Admin/User/GridAjax',
                contentType: "application/json",
                data: JSON.stringify(data),
                success: function(result) {
                    gridOptions.api.setRowData(result.records);

                    // generate pagination
                    var pagination = '';
                    for (var i = result.startPage; i <= result.endPage; i++) {
                        if (i === result.activePage) {
                            pagination += '<li class="page-item pages active"><button class="page-link">' + i + '</button></li>';
                        } else {
                            pagination += '<li class="page-item pages"><button class="page-link" onclick="onPageClick('+i+')" >' + i + '</button></li>';
                        }
                    }
                    $('#previous').after(pagination);
                }
            });
        });


        function onNextClick() {
            var data = {
                filters: $('form').serializeArray(),
                sortOrder: $('select[name="sortOrder"]').val(),
                pageId: activePage + 1
            };
            $.ajax({
                type: "POST",
                dataType: "json",
                url: 'https://@Context.Request.Host/Admin/User/GridAjax',
                contentType: "application/json",
                data: JSON.stringify(data),
                success: function(result) {
                    gridOptions.api.setRowData(result.records);
                    activePage = result.activePage;

                    $('.pages').remove();
                    var pagination = '';
                    for (var i = result.startPage; i <= result.endPage; i++) {
                        if (i === result.activePage) {
                            pagination += '<li class="page-item pages active"><button class="page-link">' + i + '</button></li>';
                        } else {
                            pagination += '<li class="page-item pages"><button class="page-link" onclick="onPageClick('+i+')" >' + i + '</button></li>';
                        }
                    }
                    $('#previous').after(pagination);
                }
            });
        }

        function onPreviousClick() {
            var data = {
                filters: $('form').serializeArray(),
                sortOrder: $('select[name="sortOrder"]').val(),
                pageId: activePage - 1
            };
            $.ajax({
                type: "POST",
                dataType: "json",
                url: 'https://@Context.Request.Host/Admin/User/GridAjax',
                contentType: "application/json",
                data: JSON.stringify(data),
                success: function(result) {
                    gridOptions.api.setRowData(result.records);
                    activePage = result.activePage;

                    $('.pages').remove();
                    var pagination = '';
                    for (var i = result.startPage; i <= result.endPage; i++) {
                        if (i === result.activePage) {
                            pagination += '<li class="page-item pages active"><button class="page-link">' + i + '</button></li>';
                        } else {
                            pagination += '<li class="page-item pages"><button class="page-link" onclick="onPageClick('+i+')" >' + i + '</button></li>';
                        }
                    }
                    $('#previous').after(pagination);
                }
            });
        }

        function onPageClick(pageNumber) {
            var data = {
                filters: $('form').serializeArray(),
                sortOrder: $('select[name="sortOrder"]').val(),
                pageId: pageNumber
            };
            $.ajax({
                type: "POST",
                dataType: "json",
                url: 'https://@Context.Request.Host/Admin/User/GridAjax',
                contentType: "application/json",
                data: JSON.stringify(data),
                success: function(result) {
                    gridOptions.api.setRowData(result.records);
                    activePage = result.activePage;

                    $('.pages').remove();
                    var pagination = '';
                    for (var i = result.startPage; i <= result.endPage; i++) {
                        if (i === result.activePage) {
                            pagination += '<li class="page-item pages active"><button class="page-link">' + i + '</button></li>';
                        } else {
                            pagination += '<li class="page-item pages"><button class="page-link" onclick="onPageClick('+i+')" >' + i + '</button></li>';
                        }
                    }
                    $('#previous').after(pagination);
                }
            });
        }


        function Submit() {
            var data = { filters: $('form').serializeArray(), sortOrder: $('select[name="sortOrder"]').val() };
            $.ajax({
                type: "POST",
                dataType: "json",
                url: 'https://@Context.Request.Host/Admin/User/GridAjax',
                contentType: "application/json",
                data: JSON.stringify(data),
                success: function(result) {
                    gridOptions.api.setRowData(result.records);
                    activePage = result.activePage;

                    $('.pages').remove();
                    var pagination = '';
                    for (var i = result.startPage; i <= result.endPage; i++) {
                        if (i === result.activePage) {
                            pagination += '<li class="page-item pages active"><button class="page-link">' + i + '</button></li>';
                        } else {
                            pagination += '<li class="page-item pages"><button class="page-link" onclick="onPageClick('+i+')" >' + i + '</button></li>';
                        }
                    }
                    $('#previous').after(pagination);
                }
            });
        }

        const columnDefs = [
            { field: "firstName" },
            { field: "lastName" },
            { field: "mobileNumber" },
            { field: "email" }
        ];

        const gridOptions = {
            defaultColDef: {
                resizable: true
            },
            columnDefs: columnDefs,
            enableRtl: true
        };

        const eGridDiv = document.getElementById("myGrid");
        new agGrid.Grid(eGridDiv, gridOptions);


    </script>
}

